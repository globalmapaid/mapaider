services:
  mapaider-api:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: mapaider-api
    command: >
      sh -c "cd jstoolbox && npm install -y && npm run prod && cd ..
      && python3 manage.py collectstatic --noinput
      && gunicorn mapaider_core.wsgi:application --bind :8000 --reload"
#      && python3 manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    env_file:
      - .env
    restart: "on-failure"
    depends_on:
      - mapaider-db
    networks:
      - mapaider-net

  mapaider-db:
    image: kartoza/postgis:13.0
    container_name: mapaider-db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASS=${POSTGRES_PASS}
      - POSTGRES_DB=${POSTGRES_DB}
    restart: "on-failure"
    networks:
      - mapaider-net

  mapaider-ui:
    build:
      context: ui
      dockerfile: Dockerfile.dev
    container_name: mapaider-ui
    ports:
      - "3000:3000"
    volumes:
      - /app/node_modules
      - ./ui:/app
    stdin_open: true
    depends_on:
      - mapaider-api
    networks:
      - mapaider-net

  nginx:
    container_name: mapaider-nginx
    restart: always
    depends_on:
      - mapaider-api
    build:
      context: ./nginx
      dockerfile: Dockerfile.dev
    ports:
      - "${OUTBOUND_PORT}:80"
    networks:
      - mapaider-net

networks:
  mapaider-net:
    driver: bridge

volumes:
  postgres_data: